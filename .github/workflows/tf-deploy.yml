name: Deploy Terraform

on:
  workflow_dispatch:
    inputs:
      environment:
        description: 'The environment to deploy to (dev, preprod, prod)'
        required: true
        default: 'dev'

jobs:
  terraform-execution:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout Code
      uses: actions/checkout@v4

    - name: Setup Terraform
      uses: hashicorp/setup-terraform@v3
      with:
        terraform_version: '1.4.0'

    - name: Set Working Directory
      id: set-working-directory
      run: |
        echo "## Setting Working Directory"
        ENV_PATH="./environments/${{ github.event.inputs.environment }}"
        echo "## Changing to directory $ENV_PATH"
        cd $ENV_PATH || exit 1
        echo "## Current Directory"
        pwd
        echo "## List Files"
        ls -la

    - name: Create terraform.tfvars
      run: |
        echo "## Creating terraform.tfvars"
        ENV_PATH="./environments/${{ github.event.inputs.environment }}"
        TFVARS_FILE="${ENV_PATH}/terraform_${{ github.event.inputs.environment }}.tfvars"
        echo "client_id = \"${{ secrets.ARM_CLIENT_ID }}\"" > $TFVARS_FILE
        echo "client_secret = \"${{ secrets.ARM_CLIENT_SECRET }}\"" >> $TFVARS_FILE
        echo "subscription_id = \"${{ secrets.ARM_SUBSCRIPTION_ID }}\"" >> $TFVARS_FILE
        echo "tenant_id = \"${{ secrets.ARM_TENANT_ID }}\"" >> $TFVARS_FILE
        echo "object_id = \"${{ secrets.ARM_OBJECT_ID }}\"" >> $TFVARS_FILE
        echo "environment_name = \"${{ github.event.inputs.environment }}\"" >> $TFVARS_FILE
        echo "## Contents of terraform.tfvars:"
        cat $TFVARS_FILE

    - name: Verify terraform.tfvars Location
      run: |
        echo "## Verifying terraform.tfvars Location"
        ENV_PATH="./environments/${{ github.event.inputs.environment }}"
        echo "## Listing Files in $ENV_PATH"
        ls -la $ENV_PATH

    - name: Initialize Terraform
      run: |
        echo "## Initializing Terraform"
        REPO_NAME=$(echo "${{ github.repository }}" | cut -d'/' -f2)
        ENV_PATH="./environments/${{ github.event.inputs.environment }}"
        TFVARS_FILE="${ENV_PATH}/terraform_${{ github.event.inputs.environment }}.tfvars"
        cd $ENV_PATH || exit 1
        terraform init \
          -backend-config="resource_group_name=${{ secrets.STATE_RESOURCE_GROUP_NAME }}" \
          -backend-config="storage_account_name=${{ secrets.STATE_STORAGE_ACCOUNT_NAME }}" \
          -backend-config="container_name=${{ secrets.STATE_CONTAINER_NAME }}" \
          -backend-config="key=${REPO_NAME}/${{ github.ref_name }}/terraform.tfstate"
        echo "## Terraform Initialized"
      env:
        ARM_CLIENT_ID: ${{ secrets.ARM_CLIENT_ID }}
        ARM_CLIENT_SECRET: ${{ secrets.ARM_CLIENT_SECRET }}
        ARM_SUBSCRIPTION_ID: ${{ secrets.ARM_SUBSCRIPTION_ID }}
        ARM_TENANT_ID: ${{ secrets.ARM_TENANT_ID }}

    - name: Plan Terraform Changes
      run: |
        echo "## Planning Terraform Changes"
        ENV_PATH="./environments/${{ github.event.inputs.environment }}"
        TFVARS_FILE="${ENV_PATH}/terraform_${{ github.event.inputs.environment }}.tfvars"
        cd $ENV_PATH || exit 1
        pwd
        ls -la
        cat $TFVARS_FILE
        terraform plan -var-file="$TFVARS_FILE" -out=tfplan
        echo "## Terraform Plan Completed"
